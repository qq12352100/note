
psql -U [username] -d [dbname]       #打开终端
psql -U system -d test_001
\du     #查看所有用户
\l      #列出所有数据库    \l+ 列出所有数据库的详细信息，如表空间、所有者等。
\c      #切换数据库
\q      #退出数据库
\d      #列出所有表  \d tablename 描述表结构。\da 表和视图。 \dt 表，不包括视图。 \dv 视图。\ds 序列。\dn 模式。\di 索引。\du 用户
\q      #退出终端
\encoding       #显示当前数据库的字符编码
\i filename     #从文件中读取并执行 SQL 命令

-------------------------------------------------------------------------------------------------------------【备份】
pg_dump -U system -F c -b -v -f construction_project_safety_bak_20241013.db construction_project_safety

[例]pg_dump -U system -h localhost -p 5432 -F c -b -v -f backupfile.tar mydatabase
-U system：使用 system 用户进行备份。
-h localhost：指定备份的数据库服务器地址为 localhost。
-p 5432：指定备份的数据库服务器端口号为 5432。
-F c：指定备份格式为自定义格式。
-b：生成一个可以由 pg_restore 使用的脚本来重建数据库。
-v：增加输出的详细程度。
-f backupfile.tar：指定备份文件的路径和名称。
mydatabase：指定要备份的数据库名称。

-F p 或 --format=plain       #最简单的 SQL 输出格式，包含所有 SQL 命令来重建数据库。
-F c 或 --format=custom      #二进制格式，支持增量备份，恢复速度较快。
-F t 或 --format=tar         #使用 Tar 格式打包备份文件，支持压缩。
-F d 或 --format=directory   #将备份数据保存在目录结构中，每个文件代表一部分数据。
-F s 或 --format=sql         #与普通文本格式类似，但支持更多的 SQL 命令。

-------------------------------------------------------------------------------------------------------------【恢复】
pg_restore -U postgres -d safety_test bak_20241013.db

[例]pg_restore -U system -d mydatabase -v backupfile.tar
-U system：指定恢复时使用的数据库用户。
-d mydatabase：指定要恢复到的数据库名称。
-v：增加输出的详细程度，显示更多详细信息。
backupfile.tar：指定要恢复的备份文件路径
--clean                                 #清除现有数据后再进行恢复。这会删除目标数据库中的所有对象。
--no-owner                              #不恢复所有者信息。
--no-acl                                #不恢复访问控制列表。
--data-only                             #只恢复数据，不恢复表结构。
--schema-only                           #只恢复表结构，不恢复数据。
-t table | --table=table                #只恢复指定的表。
-T table | --exclude-table-data=table   #排除指定的表。
-n schema | --schema=schema             #只恢复指定的模式。
-N schema | --exclude-schema=schema     #排除指定的模式。
-Z level | --compress=level             #指定压缩级别，范围是 0 到 9，默认为 1。
-------------------------------------------------------------------------------------------------------------
CREATE ROLE admin WITH SUPERUSER CREATEDB CREATEROLE LOGIN PASSWORD 'adminpassword';   #创建超级管理员
CREATE DATABASE dbname;     #创建数据库
DROP DATABASE dbname;       #删除数据库
