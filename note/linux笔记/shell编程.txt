echo $# 【输出参数个数】
./restart.sh sss2 sss  sss
3
----------------------------------------------------------------------
$0	当前脚本的文件名
$n	传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是$1，第二个参数是$2。
$#	传递给脚本或函数的参数个数。
$*	传递给脚本或函数的所有参数。
$@	传递给脚本或函数的所有参数。被双引号(" ")包含时，与 $* 稍有不同，下面将会讲到。
$?	上个命令的退出状态，或函数的返回值。一般情况下，大部分命令执行成功会返回 0，失败返回 1。
$$	当前Shell进程ID。对于 Shell 脚本，就是这些脚本所在的进程ID。
----------------------------------------------------------------------
#获取输入并赋值给 NAME 变量，最后在 stdout 上输出
echo "What is your name?"
read NAME
echo "Hello, $NAME"
string="abcd"
#获取字符串长度
echo ${#string} #输出 4
#提取子字符串
string="alibaba is a great company"
echo ${string:1:4} #输出liba
#查找子字符串
string="alibaba is a great company"
echo `expr index "$string" is`
#############################################################################
【变量的申明】name=xxx;取变量值的时候$name
【条件判断】
if[ condition]; then
　　operator;
elif[ condition]; then
　　operator;
else
　　operator;
fi
【循环】
　　while[ condition]
#condition如果是用[]取代test，则有两个[]
　　do
　　　　operator;
　　done;
-----------------------------------------------------------
　　for((i=1;i<100;i++))
　　do
 　　　　operator;
　　done;
-----------------------------------------------------------
　　for var in $(seq n)
#or for var in `cat /etc/hosts`
　　do
 　　　　operator;
　　done;
使用"[]"做判断【条件】注意点：
　　1）、每个组件之间都要用空格隔开，如果用@代替空格，则表达式的判断为@[@str1@==@str2@]@；
　　2）、用'=='进行判断时，两边的必须是字符串，所以必须用""括起来，如"$name" == "want"，用$name == "want"出错，两边类型不同；
　　3）、test判断：
　　　　文件侦测: 
				test -e filename
　　　　　　　　test -f filename
　　　　　　　　test -d direct
　　　　文件权限判断：
　　　　　　　　test -r filename
　　　　　　　　test -w filename
　　　　　　　　test -x filename
　　　　文档时间：
　　　　　　　　test file1 -nt file2;判断file1是否比file2新
　　　　　　　　test file1 -ot file2;
　　　　　　　　test file1 -et file2;判断两个文件是否为同一个档案，可用在hard link的判断上
　　　　两整数的判断：
　　　　　　　　test n1 -eq n2;等于
　　　　　　　　test n1 -ne n2;不等于
　　　　　　　　test n1 -gt n2;大于
　　　　　　　　test n1 -lt n2;小于
　　　　　　　　test n1 -ge n2;大于等于
　　　　　　　　test n1 -le n2;小于等于
　　　　字符串的判断：
　　　　　　test -z string;字符串是否为空为0，如果string为空，则为true;
　　　　　　test -n string;字符串是否非0
　　　　　　test st1 = st2;
　　　　　　test st1 != st2;
　　　　多重判断：
　　　　　　-a:and，例子test -r file -a -x file;
　　　　　　-o:or
　　　　　　!:test ! -x file：判断file文件是否没有可执行权限
　　　4）、[]判断可以替代test进行判断，除了2）中的字符串相等要用==；
　　　5）、let "count=$count + 1";必须有""，否则出错
#############################################################################

#!/bin/sh
#判断进程是否存在
ps -fe|grep java |grep -v grep
if [ $? -ne 0 ]
then
echo "stop....."
else
echo "runing....."
fi
#########################################################################

#!/bin/sh
#根据进程名杀死进程
if [ $# -lt 1 ]
then
  echo "缺少参数：procedure_name"
  exit 1
fi
 
PROCESS=`ps -ef|grep $1|grep -v grep|grep -v PPID|awk '{ print $2}'`
for i in $PROCESS
do
  echo "Kill the $1 process [ $i ]"
  kill -9 $i
done
########################################################################
