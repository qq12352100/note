http://cdn.code.baidu.com/  百度静态资源库

<script src="http://apps.bdimg.com/libs/jquery/1.10.2/jquery.min.js"></script>
<script src="http://libs.useso.com/js/jquery/2.1.1/jquery.min.js"></script>
// @require      http://libs.baidu.com/jquery/2.1.4/jquery.min.js
window.location.href
上右下左
==========================================================================================================json处理
-----------------------------------------------------表单序列化
$("#Form").serialize()
--mgrade=aa1&mclass=aa2
var stringObj= "{" +jsonstr.replace(/&/g,"\",").replace(/=/g,":\"") + "\"}"; --转json字符串

$("#Form").serializeObject()
--{"mgrade":"aa1","mclass":"aa2"}
$("#Form").serializeArray()
--[{"name":"bkk"},{"name2":"bkk2"}]
-----------------------------------------------------jquery转json字符串转换json对象
JSON.parse(jsonstr);        //转为json对象 
eval('(' + jsonstr + ')');  //转为json对象
JSON.stringify(jsonobj);    //转为json字符串 
-----------------------------------------------------定义json对象
var json ={};
json['a3']="已填写";
-----------------------------------------------------取json的key与value
for(var key in jsonObj){
    alert(key);//key
    alert(jsonObj[key]);//value
}
console.log(Object.keys(jsonObj));
==========================================================================================================数字处理
----------------------------------------------------------四舍五入(返回字符串)
var num =2.446242342;
num = num.toFixed(2); //结果为 2.45
----------------------------------------------------------不四舍五入(返回数字)
Math.floor(15.7784514000*100)/100;  //结果为 15.77
==========================================================================================================数组处理
//删除起始下标为1，长度为1的一个值(len设置1，如果为0，则数组不变) 
var arr = ['a','b','c','d']; 
arr.splice(1,1); //['a','c','d'];  
//删除起始下标为1，长度为2的一个值(len设置2) 
arr2.splice(1,2); //['a','d']
//替换起始下标为1，长度为1的一个值为‘ttt'，len设置的1 
arr.splice(1,1,'ttt'); //['a','ttt','c','d'] 
替换起始下标为1，长度为2的两个值为‘ttt'，len设置的1
arr2.splice(1,2,'ttt'); //['a','ttt','d'] 
表示在下标为1处添加一项'ttt'
arr.splice(1,0,'ttt'); //['a','ttt','b','c','d'] 
//数组长度不变，有一项为undefined
delete arr[1];//["a", undefined, "c", "d"]
==========================================================================================================字符处理
-------------------------------------------String转int
var str1='00100';
alert(Number(str1));    //得到100
alert(parseInt(str1));  //得到64
-------------------------------------------截取字符串
str.substring(0,2);     //abcd-->ab
str.substring(2);       //abcd-->cd
-------------------------------------------分割字符串
var arr=str.split(',');
alert(arr[1]);
-------------------------------------------判断包含字符串
if(largeString.indexOf(shortString) != -1){
}
-------------------------------------------取一类值转为字符串用，分割
var checkName= [];
jQuery("input[name='a']").each(function(key,value){
    checkName[key] = $(this).val();
});
checkName.join(",").substring(1);
-------------------------------------------
==========================================================================================================函数处理
setTimeout(function(){location.reload();},3000);
--------------------------------------------------------------------------获取被点击元素
function yearClink(fun){
    fun.name;//获取函数名字
    fun();
    fun.call();//调用函数
    event.target;
    event.currentTarget;
}
==========================================================================================================日期处理
var datee = new Date(Number(1469513008600)).getFullYear();
var start = new Date("2016-08-27 00:00:00");  
mydate.getFullYear(); //获取完整的年份(4位,1970-????)
mydate.getMonth(); //获取当前月份(0-11,0代表1月)
mydate.getDate(); //获取当前日(1-31)
mydate.getDay(); //获取当前星期X(0-6,0代表星期天)
mydate.getTime(); //获取当前时间(从1970.1.1开始的毫秒数)
mydate.getHours(); //获取当前小时数(0-23)
mydate.getMinutes(); //获取当前分钟数(0-59)
mydate.getSeconds(); //获取当前秒数(0-59)
mydate.getMilliseconds(); //获取当前毫秒数(0-999)
mydate.toLocaleDateString(); //获取当前日期(2016/8/29)
mydate.toLocaleString(); //获取日期与时间(2016/8/29 下午3:49:04)
----------------------------------------------------------------------------------date转string
//(new Date()).Format("yyyy-MM-dd hh:mm:ss.S") ==> 2006-07-02 08:09:04.423 
//(new Date()).Format("yyyy-M-d h:m:s.S")      ==> 2006-7-2 8:9:4.18 
Date.prototype.Format = function (fmt) {
    var o = {
        "M+": this.getMonth() + 1, //月份 
        "d+": this.getDate(), //日 
        "h+": this.getHours(), //小时 
        "m+": this.getMinutes(), //分 
        "s+": this.getSeconds(), //秒 
        "q+": Math.floor((this.getMonth() + 3) / 3), //季度 
        "S": this.getMilliseconds() //毫秒 
    };
    if (/(y+)/.test(fmt))
        fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
    for (var k in o){
        if (new RegExp("(" + k + ")").test(fmt)) {
            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
        }
    }
    return fmt;
}
==========================================================================================================滑动到底部
$(window).scroll(function(){ 
   totalheight = parseFloat($(window).height()) + parseFloat($(window).scrollTop());
   if($(document).height() <= totalheight){//如果高度小了
        alert(0);
   } 
});
----滑到顶部
$('html,body').animate({scrollTop:0},'slow');
==========================================================================================================循环
if(obj.a3.length>0){ 
    var temp = obj.a3.split(',');
    jQuery.each(temp, function(i,val) {
     $("#a3_"+val.trim()).prop("checked","checked");
    });
}
-------------------------------------------循环调用函数
$(function(){
    var form_list=new Array(test1,test2);
    form_list[0].apply();
});
var test1=function(){
    alert(0);
}
var test2=function(){
    alert(1);
}
-------------------------------------------循环调用函数
function time(){ 
alert("我3秒出来一次.");
}
setInterval("time()",3000);
==========================================================================================================选择器（多个ID只取第一个）
$("#a").next()      当前元素的下一个

$(".intro")         所有 class="intro" 的元素
$(".intro.demo")    所有 class="intro" 且 class="demo" 的元素

$("p")              所有 <p> 元素
$("p:first")        第一个 <p> 元素
$("p:last")         最后一个 <p> 元素
:eq(index)， 例如 $("ul li:eq(2)") 表示列表中的第三个元素（index 从 0 开始）

$("#baseInfoMember_d").find("table").find("tr:gt(2)").remove();  索引0大于第三个tr（第三个以后的tr）（index 从 0 开始）


$("tr:even")        所有偶数 <tr> 元素
$("tr:odd")         所有奇数 <tr> 元素

$("[href]")         所有带有 href 属性的元素
$("[href='#']")     所有 href 属性的值等于 "#" 的元素
$("[href!='#']")    所有 href 属性的值不等于 "#" 的元素
$("[href$='.jpg']") 所有 href 属性的值包含以 ".jpg" 结尾的元素
[att=value]         匹配包含给定属性的元素 (大小写区分)
[att*=value]        模糊匹配
[att!=value]        不能是这个值
[att$=value]        结尾是这个值
[att^=value]        开头是这个值
[att1][att2][att3]... 匹配多个属性条件中的一个

$(":input")         所有 <input> 元素
$(":text")          所有 type="text" 的 <input> 元素//password、radio、checkbox、submit、reset、button、image、file
$(":enabled")       所有激活的 input 元素
$(":disabled")      所有禁用的 input 元素
$(":selected")      所有被选取的 input 元素
$(":checked")       所有被选中的 input 元素

jQuery.parent(expr)     //找父亲节点，可以传入expr进行过滤，比如$("span").parent()或者$("span").parent(".class")
jQuery.parents(expr)    //类似于jQuery.parents(expr),但是是查找所有祖先元素，不限于父元素
jQuery.children(expr)   //返回所有子节点，这个方法只会返回直接的孩子节点，不会返回所有的子孙节点
jQuery.contents()       //返回下面的所有内容，包括节点和文本。这个方法和children()的区别就在于，包括空白文本，也会被作为一个jQuery对象返回，children()则只会返回节点
jQuery.prev()           //返回上一个兄弟节点，不是所有的兄弟节点
jQuery.prevAll()        //返回所有之前的兄弟节点
jQuery.next()           //返回下一个兄弟节点，不是所有的兄弟节点
jQuery.nextAll()        //返回所有之后的兄弟节点
jQuery.siblings()       //返回兄弟姐妹节点，不分前后
---------------------------------------------------------------------------------
$("#searchArea").is(':checked')     //判断有没有被选中
this.parentNode                     //传父节点
========================================================================================================== URL取参数
http://localhost:8086/topic/index?topicId=361
window.location
属性          描述
pathname   /topic/index          设置或获取对象指定的文件名或路径。
host       http:localhost:8086       设置或获取 location 或 URL 的 hostname 和 port 号码。
search     ?topicId=361          设置或获取 href 属性中跟在问号后面的部分。

hash          设置或获取 href 属性中在井号“#”后面的分段。
hostname      设置或获取 location 或 URL 的主机名称部分。
href          设置或获取整个 URL 为字符串。
port          设置或获取与 URL 关联的端口号码。
protocol      设置或获取 URL 的协议部分。
==========================================================================================================窗口嵌套时刷新上级窗口
if(window.parent != window){
    window.parent.location.reload(true);
}
history.go(0) 
location.reload() 
location=location 
location.assign(location) 
document.execCommand('Refresh') 
window.navigate(location) 
location.replace(location) 
document.URL=location.href
==========================================================================================================函数传参掉方法
checkCss(this);
function checkCss(temp){
    var clazz = $(temp).attr("class");
    if(clazz=="buketian"){
        return false;
    }
}
==========================================================================================================精确到秒按小时数倒记时代码
<SCRIPT LANGUAGE="JavaScript">   
var maxtime = 60*60 //一个小时，按秒计算，自己调整!   
function CountDown(){   
if(maxtime>=0){   
minutes = Math.floor(maxtime/60);   
seconds = Math.floor(maxtime%60);   
msg = "距离结束还有"+minutes+"分"+seconds+"秒";   
document.all["timer"].innerHTML=msg;   
if(maxtime == 5*60) alert('注意，还有5分钟!');   
--maxtime;   
}   
else{   
clearInterval(timer);   
alert("时间到，结束!");   
}   
}   
timer = setInterval("CountDown()",1000);   
</SCRIPT>   
<div id="timer" style="color:red"></div> 
==========================================================================================================合计算数 
$("#creditInfoEditE").find("table").find("input:gt(0):lt(7)").keydown(function() {
    var sum = 0;
    $("#creditInfoEditE").find("table").find("input:gt(0):lt(7)").each(function(){
        if($(this).val()){
            sum += parseInt($(this).val());
        }
    });
    $("#total").val(sum);
});
==========================================================================================================禁止一次弹窗
window.alert = function(str){
return ;
}
==========================================================================================================监听键盘按键|模拟按键
jQuery.fn.simulateKeyPress = function(character) {  
    // 内部调用jQuery.event.trigger参数有 (Event, data, elem). 最后一个参数是非常重要的的！  
    jQuery(this).trigger({ type: 'keypress', which: character.charCodeAt(0) });  
}; 
$('body').keypress( function(e) {  
    console.log(String.fromCharCode( e.which ));  
});  
// 模拟按键了 x  
$( 'body' ).simulateKeyPress('x');  
==========================================================================================================HTML
<table id="" style="border-collapse: collapse;" >   //td加边框不起作用
input[disabled]{outline: none;border:none;background:none;}     //input去掉边框
border:1px solid #000000;       //一个像素的实线边框
1px dashed #000000          //一个像素的虚线边框
cursor:pointer;             //鼠标样式
text-transform: uppercase; //input值转大写
==========================================================================================================油候
// @match        http://ydwyweb.cc:7070/tyzf-web/pages/login.jsp
document.getElementById('loginname').value='admin';
document.getElementById('password').value='admin';
document.getElementById('btnlogin').click();
------------------------------------------------------------------
==========================================================================================================IE操作打印
<OBJECT id=WebBrowser classid=CLSID:8856F961-340A-11D0-A96B-00C04FD705A2 height=0 width=0></OBJECT>
<input type=button value=打开 οnclick=document.all.WebBrowser.ExecWB(1,1)>
<input type=button value=关闭现在所有的IE窗口并打开一个新窗口 οnclick=document.all.WebBrowser.ExecWB(3,1)>
<input type=button value=网页另存为 οnclick=document.all.WebBrowser.ExecWB(4,1)>
<input type=button value=查看页面属性 οnclick=document.all.WebBrowser.ExecWB(10,1)>
<input type=button value=全选 οnclick=document.all.WebBrowser.ExecWB(17,1)>
<input type=button value=刷新 οnclick=document.all.WebBrowser.ExecWB(22,1)>
<input type=button value=关闭窗体无提示 οnclick=document.all.WebBrowser.ExecWB(45,1)>
<input type=button value=打印 οnclick=document.all.WebBrowser.ExecWB(6,1) >
<input type=button value=直接打印 οnclick=document.all.WebBrowser.ExecWB(6,6)>
<input type=button value=打印预览 οnclick=document.all.WebBrowser.ExecWB(7,1)>
<input type=button value=页面设置 οnclick=document.all.WebBrowser.ExecWB(8,1)>
<OBJECT classid=CLSID:8856F961-340A-11D0-A96B-00C04FD705A2 height=0 id=WebBrowser width=0></OBJECT>
<input name=Button .Click=document.all.WebBrowser.ExecWB(1,1) type=button value=打开>
<input name=Button .Click=document.all.WebBrowser.ExecWB(2,1) type=button value=关闭所有>
<input name=Button .Click=document.all.WebBrowser.ExecWB(4,1) type=button value=另存为>
<input name=Button .Click=document.all.WebBrowser.ExecWB(6,1) type=button value=打印>
<input name=Button .Click=document.all.WebBrowser.ExecWB(6,6) type=button value=直接打印>
<input name=Button .Click=document.all.WebBrowser.ExecWB(7,1) type=button value=打印预览>
<input name=Button .Click=document.all.WebBrowser.ExecWB(8,1) type=button value=页面设置>
<input name=Button .Click=document.all.WebBrowser.ExecWB(10,1) type=button value=属性>
<input name=Button .Click=document.all.WebBrowser.ExecWB(17,1) type=button value=全选>
<input name=Button .Click=document.all.WebBrowser.ExecWB(22,1) type=button value=刷新>
<input name=Button .Click=document.all.WebBrowser.ExecWB(45,1) type=button value=关闭>
















